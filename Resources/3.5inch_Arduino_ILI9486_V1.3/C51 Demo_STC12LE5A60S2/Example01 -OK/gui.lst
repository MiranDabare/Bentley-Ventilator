C51 COMPILER V9.56.0.0   GUI                                                               11/07/2017 17:19:47 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE GUI
OBJECT MODULE PLACED IN .\obj\gui.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE GUI\gui.c LARGE BROWSE INCDIR(.\font;.\LCD;.\sys;.\touch;.\GUI;.\USER) D
                    -EBUG OBJECTEXTEND PRINT(.\gui.lst) TABS(2) OBJECT(.\obj\gui.obj)

line level    source

   1          #include "lcd.h"
   2          #include "font.h" 
   3          #include "sys.h"
   4          #include "gui.h"
   5          #include "string.h"
   6          //////////////////////////////////////////////////////////////////////////////////   
   7          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   8          //测试硬件：单片机STC12LE5A60S2,晶振30M  单片机工作电压3.3V
   9          //QDtech-TFT液晶驱动 for C51
  10          //xiao冯@ShenZhen QDtech co.,LTD
  11          //公司网站:www.qdtech.net
  12          //淘宝网站：http://qdtech.taobao.com
  13          //我司提供技术支持，任何技术问题欢迎随时交流学习
  14          //固话(传真) :+86 0755-23594567 
  15          //手机:15989313508（冯工） 
  16          //邮箱:QDtech2008@gmail.com 
  17          //Skype:QDtech2008
  18          //技术交流QQ群:324828016
  19          //创建日期:2013/5/13
  20          //版本：V1.1
  21          //版权所有，盗版必究。
  22          //Copyright(C) 深圳市全动电子技术有限公司 2009-2019
  23          //All rights reserved
  24          //********************************************************************************
  25          
  26          //******************************************************************
  27          //函数名：  GUI_DrawPoint
  28          //作者：    xiao冯@全动电子
  29          //日期：    2013-02-22
  30          //功能：    GUI描绘一个点
  31          //输入参数：x:光标位置x坐标
  32          //          y:光标位置y坐标
  33          //      color:要填充的颜色
  34          //返回值：  无
  35          //修改记录：无
  36          //******************************************************************
  37          void GUI_DrawPoint(u16 x,u16 y,u16 color)
  38          {
  39   1        LCD_SetCursor(x,y);//设置光标位置 
  40   1        LCD_DrawPoint_16Bit(color); 
  41   1      }
  42          
  43          //******************************************************************
  44          //函数名：  LCD_Fill
  45          //作者：    xiao冯@全动电子
  46          //日期：    2013-02-22
  47          //功能：    在指定区域内填充颜色
  48          //输入参数：sx:指定区域开始点x坐标
  49          //          sy:指定区域开始点y坐标
  50          //      ex:指定区域结束点x坐标
  51          //      ey:指定区域结束点y坐标
  52          //          color:要填充的颜色
  53          //返回值：  无
  54          //修改记录：无
C51 COMPILER V9.56.0.0   GUI                                                               11/07/2017 17:19:47 PAGE 2   

  55          //******************************************************************
  56          void LCD_Fill(u16 sx,u16 sy,u16 ex,u16 ey,u16 color)
  57          {   
  58   1      
  59   1        u16 i,j;      
  60   1        u16 width=ex-sx+1;    //得到填充的宽度
  61   1        u16 height=ey-sy+1;   //高度
  62   1        LCD_SetWindows(sx,sy,ex-1,ey-1);//设置显示窗口
  63   1      
  64   1      #if LCD_USE8BIT_MODEL==1
  65   1        LCD_RS=1;//写数据 
  66   1        LCD_CS=0;    
  67   1        for(i=0;i<height;i++)
  68   1        {
  69   2          for(j=0;j<width;j++)
  70   2          {
  71   3            LCD_DataPortL=(color>>8);//9486  8位模式使用低8位DB0~DB7  
  72   3            LCD_WR=0;
  73   3            LCD_WR=1; 
  74   3            
  75   3            LCD_DataPortL=color;  
  76   3            LCD_WR=0;
  77   3            LCD_WR=1;
  78   3          }   
  79   2        }
  80   1        LCD_CS=1; 
  81   1      #else //16位模式
                for(i=0;i<height;i++)
                {
                  for(j=0;j<width;j++)
                  LCD_WR_DATA(color); //写入数据   
                }
              #endif
  88   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口设置为全屏
  89   1      }
  90          
  91          //******************************************************************
  92          //函数名：  LCD_DrawLine
  93          //作者：    xiao冯@全动电子
  94          //日期：    2013-02-22
  95          //功能：    GUI画线
  96          //输入参数：x1,y1:起点坐标
  97          //          x2,y2:终点坐标 
  98          //返回值：  无
  99          //修改记录：无
 100          //****************************************************************** 
 101          void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
 102          {
 103   1        u16 t; 
 104   1        int xerr=0,yerr=0,delta_x,delta_y,distance; 
 105   1        int incx,incy,uRow,uCol; 
 106   1      
 107   1        delta_x=x2-x1; //计算坐标增量 
 108   1        delta_y=y2-y1; 
 109   1        uRow=x1; 
 110   1        uCol=y1; 
 111   1        if(delta_x>0)incx=1; //设置单步方向 
 112   1        else if(delta_x==0)incx=0;//垂直线 
 113   1        else {incx=-1;delta_x=-delta_x;} 
 114   1        if(delta_y>0)incy=1; 
 115   1        else if(delta_y==0)incy=0;//水平线 
 116   1        else{incy=-1;delta_y=-delta_y;} 
C51 COMPILER V9.56.0.0   GUI                                                               11/07/2017 17:19:47 PAGE 3   

 117   1        if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
 118   1        else distance=delta_y; 
 119   1        for(t=0;t<=distance+1;t++ )//画线输出 
 120   1        {  
 121   2          LCD_DrawPoint(uRow,uCol);//画点 
 122   2          xerr+=delta_x ; 
 123   2          yerr+=delta_y ; 
 124   2          if(xerr>distance) 
 125   2          { 
 126   3            xerr-=distance; 
 127   3            uRow+=incx; 
 128   3          } 
 129   2          if(yerr>distance) 
 130   2          { 
 131   3            yerr-=distance; 
 132   3            uCol+=incy; 
 133   3          } 
 134   2        }  
 135   1      } 
 136          
 137          //******************************************************************
 138          //函数名：  LCD_DrawRectangle
 139          //作者：    xiao冯@全动电子
 140          //日期：    2013-02-22
 141          //功能：    GUI画矩形(非填充)
 142          //输入参数：(x1,y1),(x2,y2):矩形的对角坐标
 143          //返回值：  无
 144          //修改记录：无
 145          //******************************************************************  
 146          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 147          {
 148   1        LCD_DrawLine(x1,y1,x2,y1);
 149   1        LCD_DrawLine(x1,y1,x1,y2);
 150   1        LCD_DrawLine(x1,y2,x2,y2);
 151   1        LCD_DrawLine(x2,y1,x2,y2);
 152   1      }  
 153          
 154          //******************************************************************
 155          //函数名：  LCD_DrawFillRectangle
 156          //作者：    xiao冯@全动电子
 157          //日期：    2013-02-22
 158          //功能：    GUI画矩形(填充)
 159          //输入参数：(x1,y1),(x2,y2):矩形的对角坐标
 160          //返回值：  无
 161          //修改记录：无
 162          //******************************************************************   
 163          void LCD_DrawFillRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 164          {
 165   1        LCD_Fill(x1,y1,x2,y2,POINT_COLOR);
 166   1      
 167   1      }
 168           
 169          //******************************************************************
 170          //函数名：  _draw_circle_8
 171          //作者：    xiao冯@全动电子
 172          //日期：    2013-02-22
 173          //功能：    8对称性画圆算法(内部调用)
 174          //输入参数：(xc,yc) :圆中心坐标
 175          //      (x,y):光标相对于圆心的坐标
 176          //          c:填充的颜色
 177          //返回值：  无
 178          //修改记录：无
C51 COMPILER V9.56.0.0   GUI                                                               11/07/2017 17:19:47 PAGE 4   

 179          //******************************************************************  
 180          void _draw_circle_8(int xc, int yc, int x, int y, u16 c)
 181          {
 182   1        GUI_DrawPoint(xc + x, yc + y, c);
 183   1      
 184   1        GUI_DrawPoint(xc - x, yc + y, c);
 185   1      
 186   1        GUI_DrawPoint(xc + x, yc - y, c);
 187   1      
 188   1        GUI_DrawPoint(xc - x, yc - y, c);
 189   1      
 190   1        GUI_DrawPoint(xc + y, yc + x, c);
 191   1      
 192   1        GUI_DrawPoint(xc - y, yc + x, c);
 193   1      
 194   1        GUI_DrawPoint(xc + y, yc - x, c);
 195   1      
 196   1        GUI_DrawPoint(xc - y, yc - x, c);
 197   1      }
 198          
 199          //******************************************************************
 200          //函数名：  gui_circle
 201          //作者：    xiao冯@全动电子
 202          //日期：    2013-02-22
 203          //功能：    在指定位置画一个指定大小的圆(填充)
 204          //输入参数：(xc,yc) :圆中心坐标
 205          //          c:填充的颜色
 206          //      r:圆半径
 207          //      fill:填充判断标志，1-填充，0-不填充
 208          //返回值：  无
 209          //修改记录：无
 210          //******************************************************************  
 211          void gui_circle(int xc, int yc,u16 c,int r, int fill)
 212          {
 213   1        int x = 0, y = r, yi, d;
 214   1      
 215   1        d = 3 - 2 * r;
 216   1      
 217   1      
 218   1        if (fill) 
 219   1        {
 220   2          // 如果填充（画实心圆）
 221   2          while (x <= y) {
 222   3            for (yi = x; yi <= y; yi++)
 223   3              _draw_circle_8(xc, yc, x, yi, c);
 224   3      
 225   3            if (d < 0) {
 226   4              d = d + 4 * x + 6;
 227   4            } else {
 228   4              d = d + 4 * (x - y) + 10;
 229   4              y--;
 230   4            }
 231   3            x++;
 232   3          }
 233   2        } else 
 234   1        {
 235   2          // 如果不填充（画空心圆）
 236   2          while (x <= y) {
 237   3            _draw_circle_8(xc, yc, x, y, c);
 238   3            if (d < 0) {
 239   4              d = d + 4 * x + 6;
 240   4            } else {
C51 COMPILER V9.56.0.0   GUI                                                               11/07/2017 17:19:47 PAGE 5   

 241   4              d = d + 4 * (x - y) + 10;
 242   4              y--;
 243   4            }
 244   3            x++;
 245   3          }
 246   2        }
 247   1      }
 248          
 249          //******************************************************************
 250          //函数名：  LCD_ShowChar
 251          //作者：    xiao冯@全动电子
 252          //日期：    2013-02-22
 253          //功能：    显示单个英文字符
 254          //输入参数：(x,y):字符显示位置起始坐标
 255          //          fc:前置画笔颜色
 256          //      bc:背景颜色
 257          //      num:数值（0-94）
 258          //      size:字体大小
 259          //      mode:模式  0,填充模式;1,叠加模式
 260          //返回值：  无
 261          //修改记录：无
 262          //******************************************************************  
 263          void LCD_ShowChar(u16 x,u16 y,u16 fc, u16 bc, u8 num,u8 size,u8 mode)
 264          {  
 265   1          u8 temp;
 266   1          u8 pos,t;
 267   1        u16 colortemp=POINT_COLOR;      
 268   1             
 269   1        num=num-' ';//得到偏移后的值
 270   1        LCD_SetWindows(x,y,x+size/2-1,y+size-1);//设置单个文字显示窗口
 271   1        if(!mode) //非叠加方式
 272   1        {
 273   2          
 274   2          for(pos=0;pos<size;pos++)
 275   2          {
 276   3            if(size==12)temp=asc2_1206[num][pos];//调用1206字体
 277   3            else temp=asc2_1608[num][pos];     //调用1608字体
 278   3            for(t=0;t<size/2;t++)
 279   3              {                 
 280   4                  if(temp&0x01)LCD_DrawPoint_16Bit(fc); 
 281   4              else LCD_DrawPoint_16Bit(bc); 
 282   4              temp>>=1; 
 283   4              
 284   4              }
 285   3            
 286   3          } 
 287   2        }else//叠加方式
 288   1        {
 289   2          for(pos=0;pos<size;pos++)
 290   2          {
 291   3            if(size==12)temp=asc2_1206[num][pos];//调用1206字体
 292   3            else temp=asc2_1608[num][pos];     //调用1608字体
 293   3            for(t=0;t<size/2;t++)
 294   3              {   
 295   4              POINT_COLOR=fc;              
 296   4                  if(temp&0x01)LCD_DrawPoint(x+t,y+pos);//画一个点    
 297   4                  temp>>=1; 
 298   4              }
 299   3          }
 300   2        }
 301   1        POINT_COLOR=colortemp;  
 302   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口为全屏             
C51 COMPILER V9.56.0.0   GUI                                                               11/07/2017 17:19:47 PAGE 6   

 303   1      } 
 304          //******************************************************************
 305          //函数名：  LCD_ShowString
 306          //作者：    xiao冯@全动电子
 307          //日期：    2013-02-22
 308          //功能：    显示英文字符串
 309          //输入参数：x,y :起点坐标  
 310          //      size:字体大小
 311          //      *p:字符串起始地址
 312          //      mode:模式 0,填充模式;1,叠加模式
 313          //返回值：  无
 314          //修改记录：无
 315          //******************************************************************      
 316          void LCD_ShowString(u16 x,u16 y,u8 size,u8 *p,u8 mode)
 317          {         
 318   1          while((*p<='~')&&(*p>=' '))//判断是不是非法字符!
 319   1          {   
 320   2          if(x>(lcddev.width-1)||y>(lcddev.height-1)) 
 321   2          return;     
 322   2              LCD_ShowChar(x,y,POINT_COLOR,BACK_COLOR,*p,size,mode);
 323   2              x+=size/2;
 324   2              p++;
 325   2          }  
 326   1      } 
 327          
 328          //******************************************************************
 329          //函数名：  mypow
 330          //作者：    xiao冯@全动电子
 331          //日期：    2013-02-22
 332          //功能：    求m的n次方(gui内部调用)
 333          //输入参数：m:乘数
 334          //          n:幂
 335          //返回值：  m的n次方
 336          //修改记录：无
 337          //******************************************************************  
 338          u32 mypow(u8 m,u8 n)
 339          {
 340   1        u32 result=1;  
 341   1        while(n--)result*=m;    
 342   1        return result;
 343   1      }
 344          
 345          //******************************************************************
 346          //函数名：  LCD_ShowNum
 347          //作者：    xiao冯@全动电子
 348          //日期：    2013-02-22
 349          //功能：    显示单个数字变量值
 350          //输入参数：x,y :起点坐标  
 351          //      len :指定显示数字的位数
 352          //      size:字体大小(12,16)
 353          //      color:颜色
 354          //      num:数值(0~4294967295)
 355          //返回值：  无
 356          //修改记录：无
 357          //******************************************************************         
 358          void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len,u8 size)
 359          {           
 360   1        u8 t,temp;
 361   1        u8 enshow=0;               
 362   1        for(t=0;t<len;t++)
 363   1        {
 364   2          temp=(num/mypow(10,len-t-1))%10;
C51 COMPILER V9.56.0.0   GUI                                                               11/07/2017 17:19:47 PAGE 7   

 365   2          if(enshow==0&&t<(len-1))
 366   2          {
 367   3            if(temp==0)
 368   3            {
 369   4              LCD_ShowChar(x+(size/2)*t,y,POINT_COLOR,BACK_COLOR,' ',size,0);
 370   4              continue;
 371   4            }else enshow=1; 
 372   3             
 373   3          }
 374   2          LCD_ShowChar(x+(size/2)*t,y,POINT_COLOR,BACK_COLOR,temp+'0',size,0); 
 375   2        }
 376   1      } 
 377          
 378          //******************************************************************
 379          //函数名：  GUI_DrawFont16
 380          //作者：    xiao冯@全动电子
 381          //日期：    2013-02-22
 382          //功能：    显示单个16X16中文字体
 383          //输入参数：x,y :起点坐标
 384          //      fc:前置画笔颜色
 385          //      bc:背景颜色  
 386          //      s:字符串地址
 387          //      mode:模式 0,填充模式;1,叠加模式
 388          //返回值：  无
 389          //修改记录：无
 390          //******************************************************************
 391          void GUI_DrawFont16(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 392          {
 393   1        u8 i,j;
 394   1        u16 k;
 395   1        u16 HZnum;
 396   1        u16 x0=x;
 397   1        HZnum=sizeof(tfont16)/sizeof(typFNT_GB16);  //自动统计汉字数目
 398   1        
 399   1            
 400   1        for (k=0;k<HZnum;k++) 
 401   1        {
 402   2          if ((tfont16[k].Index[0]==*(s))&&(tfont16[k].Index[1]==*(s+1)))
 403   2          {   LCD_SetWindows(x,y,x+16-1,y+16-1);
 404   3              for(i=0;i<16*2;i++)
 405   3              {
 406   4              for(j=0;j<8;j++)
 407   4                { 
 408   5                if(!mode) //非叠加方式
 409   5                {
 410   6                  if(tfont16[k].Msk[i]&(0x80>>j)) LCD_DrawPoint_16Bit(fc);
 411   6                  else LCD_DrawPoint_16Bit(bc);
 412   6                }
 413   5                else
 414   5                {
 415   6                  POINT_COLOR=fc;
 416   6                  if(tfont16[k].Msk[i]&(0x80>>j)) LCD_DrawPoint(x,y);//画一个点
 417   6                  x++;
 418   6                  if((x-x0)==16)
 419   6                  {
 420   7                    x=x0;
 421   7                    y++;
 422   7                    break;
 423   7                  }
 424   6                }
 425   5      
 426   5              }
C51 COMPILER V9.56.0.0   GUI                                                               11/07/2017 17:19:47 PAGE 8   

 427   4              
 428   4            }
 429   3            
 430   3            
 431   3          }           
 432   2          continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 433   2        }
 434   1      
 435   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口为全屏  
 436   1      } 
 437          
 438          //******************************************************************
 439          //函数名：  GUI_DrawFont24
 440          //作者：    xiao冯@全动电子
 441          //日期：    2013-02-22
 442          //功能：    显示单个24X24中文字体
 443          //输入参数：x,y :起点坐标
 444          //      fc:前置画笔颜色
 445          //      bc:背景颜色  
 446          //      s:字符串地址
 447          //      mode:模式 0,填充模式;1,叠加模式
 448          //返回值：  无
 449          //修改记录：无
 450          //******************************************************************
 451          void GUI_DrawFont24(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 452          {
 453   1        u8 i,j;
 454   1        u16 k;
 455   1        u16 HZnum;
 456   1        u16 x0=x;
 457   1        HZnum=sizeof(tfont24)/sizeof(typFNT_GB24);  //自动统计汉字数目
 458   1          
 459   1            for (k=0;k<HZnum;k++) 
 460   1            {
 461   2              if ((tfont24[k].Index[0]==*(s))&&(tfont24[k].Index[1]==*(s+1)))
 462   2              {   LCD_SetWindows(x,y,x+24-1,y+24-1);
 463   3                  for(i=0;i<24*3;i++)
 464   3                  {
 465   4                    for(j=0;j<8;j++)
 466   4                    {
 467   5                      if(!mode) //非叠加方式
 468   5                      {
 469   6                        if(tfont24[k].Msk[i]&(0x80>>j)) LCD_DrawPoint_16Bit(fc);
 470   6                        else LCD_DrawPoint_16Bit(bc);
 471   6                      }
 472   5                    else
 473   5                    {
 474   6                      POINT_COLOR=fc;
 475   6                      if(tfont24[k].Msk[i]&(0x80>>j)) LCD_DrawPoint(x,y);//画一个点
 476   6                      x++;
 477   6                      if((x-x0)==24)
 478   6                      {
 479   7                        x=x0;
 480   7                        y++;
 481   7                        break;
 482   7                      }
 483   6                    }
 484   5                  }
 485   4                }
 486   3                
 487   3                
 488   3              }           
C51 COMPILER V9.56.0.0   GUI                                                               11/07/2017 17:19:47 PAGE 9   

 489   2              continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 490   2            }
 491   1      
 492   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口为全屏  
 493   1      }
 494          
 495          //******************************************************************
 496          //函数名：  GUI_DrawFont32
 497          //作者：    xiao冯@全动电子
 498          //日期：    2013-02-22
 499          //功能：    显示单个32X32中文字体
 500          //输入参数：x,y :起点坐标
 501          //      fc:前置画笔颜色
 502          //      bc:背景颜色  
 503          //      s:字符串地址
 504          //      mode:模式 0,填充模式;1,叠加模式
 505          //返回值：  无
 506          //修改记录：无
 507          //****************************************************************** 
 508          void GUI_DrawFont32(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 509          {
 510   1        u8 i,j;
 511   1        u16 k;
 512   1        u16 HZnum;
 513   1        u16 x0=x;
 514   1        HZnum=sizeof(tfont32)/sizeof(typFNT_GB32);  //自动统计汉字数目
 515   1        for (k=0;k<HZnum;k++) 
 516   1            {
 517   2              if ((tfont32[k].Index[0]==*(s))&&(tfont32[k].Index[1]==*(s+1)))
 518   2              {   LCD_SetWindows(x,y,x+32-1,y+32-1);
 519   3                  for(i=0;i<32*4;i++)
 520   3                  {
 521   4                  for(j=0;j<8;j++)
 522   4                    {
 523   5                    if(!mode) //非叠加方式
 524   5                    {
 525   6                      if(tfont32[k].Msk[i]&(0x80>>j)) LCD_DrawPoint_16Bit(fc);
 526   6                      else LCD_DrawPoint_16Bit(bc);
 527   6                    }
 528   5                    else
 529   5                    {
 530   6                      POINT_COLOR=fc;
 531   6                      if(tfont32[k].Msk[i]&(0x80>>j)) LCD_DrawPoint(x,y);//画一个点
 532   6                      x++;
 533   6                      if((x-x0)==32)
 534   6                      {
 535   7                        x=x0;
 536   7                        y++;
 537   7                        break;
 538   7                      }
 539   6                    }
 540   5                  }
 541   4                }
 542   3                
 543   3                
 544   3              }           
 545   2              continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 546   2            }
 547   1        
 548   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口为全屏  
 549   1      } 
 550          
C51 COMPILER V9.56.0.0   GUI                                                               11/07/2017 17:19:47 PAGE 10  

 551          //******************************************************************
 552          //函数名：  Show_Str
 553          //作者：    xiao冯@全动电子
 554          //日期：    2013-02-22
 555          //功能：    显示一个字符串,包含中英文显示
 556          //输入参数：x,y :起点坐标
 557          //      fc:前置画笔颜色
 558          //      bc:背景颜色
 559          //      str :字符串  
 560          //      size:字体大小
 561          //      mode:模式 0,填充模式;1,叠加模式
 562          //返回值：  无
 563          //修改记录：无
 564          //******************************************************************               
 565          void Show_Str(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)
 566          {         
 567   1        u16 x0=x;                   
 568   1          u8 bHz=0;     //字符或者中文 
 569   1          while(*str!=0)//数据未结束
 570   1          { 
 571   2              if(!bHz)
 572   2              {
 573   3            if(x>(lcddev.width-size/2)||y>(lcddev.height-size)) 
 574   3            return; 
 575   3                if(*str>0x80)bHz=1;//中文 
 576   3                else              //字符
 577   3                {          
 578   4                  if(*str==0x0D)//换行符号
 579   4                  {         
 580   5                      y+=size;
 581   5                x=x0;
 582   5                      str++; 
 583   5                  }  
 584   4                  else
 585   4              {
 586   5                if(size>16)//字库中没有集成12X24 16X32的英文字体,用8X16代替
 587   5                {  
 588   6                LCD_ShowChar(x,y,fc,bc,*str,16,mode);
 589   6                x+=8; //字符,为全字的一半 
 590   6                }
 591   5                else
 592   5                {
 593   6                LCD_ShowChar(x,y,fc,bc,*str,size,mode);
 594   6                x+=size/2; //字符,为全字的一半 
 595   6                }
 596   5              } 
 597   4              str++; 
 598   4                  
 599   4                }
 600   3              }else//中文 
 601   2              {   
 602   3            if(x>(lcddev.width-size)||y>(lcddev.height-size)) 
 603   3            return;  
 604   3                  bHz=0;//有汉字库    
 605   3            if(size==32)
 606   3            GUI_DrawFont32(x,y,fc,bc,str,mode);   
 607   3            else if(size==24)
 608   3            GUI_DrawFont24(x,y,fc,bc,str,mode); 
 609   3            else
 610   3            GUI_DrawFont16(x,y,fc,bc,str,mode);
 611   3              
 612   3                str+=2; 
C51 COMPILER V9.56.0.0   GUI                                                               11/07/2017 17:19:47 PAGE 11  

 613   3                x+=size;//下一个汉字偏移      
 614   3              }            
 615   2          }   
 616   1      }
 617          
 618          //******************************************************************
 619          //函数名：  Gui_StrCenter
 620          //作者：    xiao冯@全动电子
 621          //日期：    2013-02-22
 622          //功能：    居中显示一个字符串,包含中英文显示
 623          //输入参数：x,y :起点坐标
 624          //      fc:前置画笔颜色
 625          //      bc:背景颜色
 626          //      str :字符串  
 627          //      size:字体大小
 628          //      mode:模式 0,填充模式;1,叠加模式
 629          //返回值：  无
 630          //修改记录：无
 631          //******************************************************************   
 632          void Gui_StrCenter(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)
 633          {
 634   1        u16 len=strlen((const char *)str);
 635   1        u16 x1=(lcddev.width-len*8)/2;
 636   1        Show_Str(x+x1,y,fc,bc,str,size,mode);
 637   1      } 
 638           
 639          //******************************************************************
 640          //函数名：  Gui_Drawbmp16
 641          //作者：    xiao冯@全动电子
 642          //日期：    2013-02-22
 643          //功能：    显示一副16位BMP图像
 644          //输入参数：x,y :起点坐标
 645          //      *p :图像数组起始地址
 646          //返回值：  无
 647          //修改记录：无
 648          //******************************************************************  
 649          void Gui_Drawbmp16(u16 x,u16 y,const unsigned char *p) //显示40*40 QQ图片
 650          {
 651   1          int i; 
 652   1        unsigned char picH,picL; 
 653   1        LCD_SetWindows(x,y,x+40-1,y+40-1);//窗口设置
 654   1          for(i=0;i<40*40;i++)
 655   1        { 
 656   2          picL=*(p+i*2);  //数据低位在前
 657   2          picH=*(p+i*2+1);        
 658   2          LCD_DrawPoint_16Bit(picH<<8|picL);              
 659   2        } 
 660   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复显示窗口为全屏 
 661   1      
 662   1      }
 663          
 664          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5644    ----
   CONSTANT SIZE    =   5262    ----
   XDATA SIZE       =   ----     232
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.56.0.0   GUI                                                               11/07/2017 17:19:47 PAGE 12  

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
